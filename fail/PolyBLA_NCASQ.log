osra-2.0.0 $ valgrind ./src/osra images/PolyBLA\ NCASQ.gif                                                                                                                                                                                                                                                                                   [15:09:50 14-04-16]
==26137== Memcheck, a memory error detector
==26137== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al.
==26137== Using Valgrind-3.9.0 and LibVEX; rerun with -h for copyright info
==26137== Command: ./src/osra images/PolyBLA\ NCASQ.gif
==26137== 
Un
NH2
HN
NH2
==26137== Conditional jump or move depends on uninitialised value(s)
==26137==    at 0x444629: find_dashed_bonds(potrace_path_s const*, std::vector<atom_s, std::allocator<atom_s> >&, std::vector<bond_s, std::allocator<bond_s> >&, int, int*, int, double, Magick::Image const&, Magick::ColorGray const&, double, bool, double, std::vector<letters_s, std::allocator<letters_s> >&) (osra_structure.cpp:1457)
==26137==    by 0x416D5D: osra_process_image(std::string const&, std::string const&, int, bool, int, double, int, bool, bool, std::string, std::string, bool, bool, bool, bool, bool, bool, std::string const&, std::string const&, std::string const&, bool, bool, std::string const&, std::string const&) [clone ._omp_fn.0] (osra_lib.cpp:887)
==26137==    by 0x419489: osra_process_image(std::string const&, std::string const&, int, bool, int, double, int, bool, bool, std::string, std::string, bool, bool, bool, bool, bool, bool, std::string const&, std::string const&, std::string const&, bool, bool, std::string const&, std::string const&) (osra_lib.cpp:672)
==26137==    by 0x4120FD: main (osra.cpp:154)
==26137== 
==26137== 
==26137== HEAP SUMMARY:
==26137==     in use at exit: 2,068,765 bytes in 20,735 blocks
==26137==   total heap usage: 32,996,004 allocs, 32,975,269 frees, 1,521,131,186 bytes allocated
==26137== 
==26137== LEAK SUMMARY:
==26137==    definitely lost: 7,896 bytes in 79 blocks
==26137==    indirectly lost: 386 bytes in 75 blocks
==26137==      possibly lost: 520,645 bytes in 7,181 blocks
==26137==    still reachable: 1,539,838 bytes in 13,400 blocks
==26137==         suppressed: 0 bytes in 0 blocks
==26137== Rerun with --leak-check=full to see details of leaked memory
==26137== 
==26137== For counts of detected and suppressed errors, rerun with: -v
==26137== Use --track-origins=yes to see where uninitialised values come from
==26137== ERROR SUMMARY: 64 errors from 1 contexts (suppressed: 2 from 2)
